spring.application.name: order-service
server.port: 8082
server.shutdown: graceful

######## Order Service Configuration  #########
orders.product-service-url: http://localhost:8081
orders.order-events-exchange: orders-exchange
orders.new-orders-queue: new-orders
orders.delivered-orders-queue: delivered-orders
orders.cancelled-orders-queue: cancelled-orders
orders.error-orders-queue: error-orders

orders.publish-order-events-job-cron: "*/5 * * * * *"
orders.new-orders-job-cron: "*/10 * * * * *"

######## Actuator Configuration  #########
management.info.git.mode: full
management.endpoints.web.exposure.include: "*"
management.endpoint.health.show-details: always
management.endpoint.health.probes.enabled: true
management.metrics.tags.application: ${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests: true
management.observations.key-values.application: ${spring.application.name}
management.tracing.enabled: false
management.tracing.sampling.probability: 1.0


######### Swagger Configuration  #########
swagger.api-gateway-url: http://localhost:8989/order

####### OAuth2 Configuration  #########
oauth2.server-url: http://localhost:9191
oauth2.realm-url: ${oauth2.server-url}/realms/bookstore
spring.security.oauth2.resourceserver.jwt.issuer-uri: ${oauth2.realm-url}

######## Database Configuration  #########
spring.datasource.url: jdbc:postgresql://localhost:25432/postgres
spring.datasource.username: postgres
spring.datasource.password: postgres
spring.jpa.open-in-view: false
spring.jpa.show-sql: true

######## RabbitMQ Configuration  #########
spring.rabbitmq.host: localhost
spring.rabbitmq.port: 5672
spring.rabbitmq.username: guest
spring.rabbitmq.password: guest

## Resilience4j Configuration
resilience4j.retry.backends.product-service.max-attempts: 2
resilience4j.retry.backends.product-service.wait-duration: 1s

resilience4j.circuitbreaker.backends.product-service.sliding-window-type: COUNT_BASED
resilience4j.circuitbreaker.backends.product-service.sliding-window-size: 6
resilience4j.circuitbreaker.backends.product-service.minimum-number-of-calls: 4
resilience4j.circuitbreaker.backends.product-service.wait-duration-in-open-state: 20s
resilience4j.circuitbreaker.backends.product-service.permitted-number-of-calls-in-half-open-state: 2
resilience4j.circuitbreaker.backends.product-service.failure-rate-threshold: 50

spring.config.import: optional:configserver:http://localhost:8888
